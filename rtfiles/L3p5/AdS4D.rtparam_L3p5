dim := 3

refsym := 0

kerrads_background := 1

#------ Initial Data -------------------------------------------------------

#scalar field ID#
phi1_amp_1 := 0.55
phi1_r0_1 := 0.0
phi1_delta_1 := 0.2
phi1_x0_1 := [0.0 0.0 0.0]
phi1_ecc_1 := [0.3 0.2 0.25]
phi1_B_1 := 0.0
phi1_C_1 := 0.0

rhoc := 0.4
rhod := 0.8
stype := 0

#AdS4D-Kerr BH ID#
#ief_bh_r0 := 1.0
#a_rot0 := 0.2

#Parameters of arXiv:1801.09711 (Chesler,Lowe)
#ief_bh_r0 := 0.5566
#a_rot0 := 0.208723

#------------ Scalar and vector spherical harmonic perturbations ---------------#

add_perturb_t0 := 1
add_perturb_postt0 := 1
#interval of time between time steps at which we add perturbations
perturb_deltat := 0.03
#final time at which we add perturbations 
perturb_finalt := 1.0

#spherical harmonic perturbation amplitudes
#Parameters of arXiv:1801.09711 (Chesler,Lowe)
#amp_Y := -0.1333333333333
#amp_V := -0.1

amp_Y := 0.01
amp_V := 0.01

#------ AH-finder ---------
AH_Lmin := 1
AH_rsteps := 10
AH_eps := 0.0
AH_max_iter := 10000
AH_lambda := 0.0001
AH_tol := 1e-2
AH_r0 := 0.10
AH_r1 := 0.50
AH_reset_r_sample := 1
AH_xc := [0.0 0.0 0.0]
AH_Nchi := 9
AH_Nphi := 17
AH_freq := 81
AH_freq_aft := 810
#excision buffer, i.e. how wide the region to evolve within the AH (or the AdS boundary if there is no BH) is
ex_rbuf := 0.35
AH_reset_scale := 1.1
AH_max_iter_2 := 0
AH_max_iter_3 := 0
AH_max_iter_4 := 0
AH_tmin := 0
#if the following are disabled, we only output the position of the AH and the expansion theta in .sdf files
output_moreAHquant_sdf := 1
output_metricAH_cart_sdf := 0
output_metricAH_sph_sdf := 1
#setting output_(rel)kretschAH_sdf to 1 will output (relative) Kretschmann at the AH only if output_kretsch is enabled
output_kretschAH_sdf := 1
output_riemanncubeAH_sdf := 1
output_moreAHquant_ascii := 1
output_AHtheta_ascii := 1
output_metricAH_cart_ascii := 1
output_metricAH_sph_ascii := 1
#setting output_(rel)kretschAH_ascii to 1 will output (relative) Kretschmann at the AH only if output_kretsch is enabled
output_kretschAH_ascii := 1
output_riemanncubeAH_ascii := 1
output_diagnosticAH_ascii := 1
#Option important when restarting from checkpoint: in case the excision surface of the new run is smaller than the one in the old one, this option makes sure that all the points excised in the previous run are excised in the current one
excise_prev_run_ex_pts := 0
#excision ellipse semi-axes of the previous run when restarting from checkpoint: they must be set only if we are enabling excise_prev_run_ex_pts
prev_run_ex_r := [0.0 0.0 0.0]
prev_run_ex_r_2 := [0.0 0.0 0.0]
prev_run_ex_r_3 := [0.0 0.0 0.0]
prev_run_ex_r_4 := [0.0 0.0 0.0]

#general (set skip_constraints=1 to make sure Hb_a=0 set to zero;#
#         otherwise init_hb.f will set Hb_a=-C_a not exactly zero)#
#        (set skip_constraints=1 to make sure gb_ij_nm1,gb_ij_np1 set to zero;#
#         otherwise init_nm1.f,init_np1.f will initialize by double-dots)#
#        (also, skip_constraints=1 && ief_bh_r0!=0 for adsbh initial data) 
 
background := 0
skip_constraints := 1
output_ires := 1
output_kretsch := 1
#setting output_kretschcentregrid to 1 will output relative Kretschmann at the centre of the grid only if output_kretsch is enabled
output_kretschcentregrid := 0
output_riemanncube := 1

#------ Boundary extrapolation ---------
output_bdyquantities := 1
#if rad_extrap=1 we use boundary extrapolation along radial direction (output saved in the freepts txt files)
#if rad_extrap=0 we extrapolate along Cartesian directions
rad_extrap := 1
output_outermostpts := 1
bdy_extrap_freepts := 1
bdy_extrap_fixedpts := 1
half_steps_from_bdy_ext_paramset1 := 9
half_steps_from_bdy_ext_paramset2 := 5
half_steps_from_bdy_int_paramset1 := 12
half_steps_from_bdy_int_paramset2 := 12
output_bdy_extraporder1_paramset1 := 1
output_bdy_extraporder2_paramset1 := 1
output_bdy_extraporder3_paramset1 := 1
output_bdy_extraporder4_paramset1 := 0
output_bdy_extraporder1_paramset2 := 1
output_bdy_extraporder2_paramset2 := 1
output_bdy_extraporder3_paramset2 := 1
output_bdy_extraporder4_paramset2 := 0
output_bdyphi            := 1
output_bdytrace          := 1
output_bdymassdens       := 1
output_bdyangmomdens     := 1
#Notice: AdS_mass calculation involves a double integral on the boundary sphere. 
#This calculation is reliable only when using 1 core
output_AdS_mass := 0
reduced_ascii := 0
reduction_factor_ascii := 81
alltimes_ascii := 0
timestep_ascii := 1

#------ interpolation parameters (0:off,1:xy2pt,2:rho2pt,3:rho3pt) ---------

interptype := 0

#------ shift interior by integer multiples of dx, away from the boundary --

i_shift := 0

#------ axis reg (1:deriv_1pt,4:interp_2pt,5:deriv_2pt,6:deriv_3pt----------
#(NOTE: 2:deriv_1pt_sets_gb_yy, 3:experimental_2pt, 7:deriv_3pt_sets_gb_yy)

regtype := 2

#------ trace parameters (most off) ----------------------------------------

echo_params := 1
pamr_trace_lev := 0
MG_trace := 2
MG_DV_trace := 0
MG_DV_trace_t_on := -1
MG_DV_trace_t_off := 1
evo_trace := 2
evo_DV_trace := 0
evo_DV_trace_t_on := -1
evo_DV_trace_t_off := 1
ID_DV_trace := 0

#------ grid/parallel/AMR parameters ---------------------------------------
ratio_Lhighres_Llowres := 1.5
#resolution_degree is the degree of the current resolution w.r.t. to the lowest resolution that we are going to use to for the convergence factor, i.e. 1 for the lowest resolution, 2 for the middle one and  3 for the highest one
resolution_degree := 4
max_resolution_degree := 4
#reduction_factor is the factor by which we need to reduce the number points of the lowest resolution used for convergence (i.e. the resolution with degree 1) so that we only select points that are present also in the resolutions with degree 2 and 3. To get the exact same points in higher resolutions, we need to reduce by a factor (reduction_factor**(max_resolution_degree-1))*((ratio_Lhighres_Llowres)**(resolution_degree-1)). ratio_Lhighres_Llowres and reduction_factor must be chosen so that this factor is an integer for all resolutions
reduction_factor := 2

base_shape := [487 487 487]
max_lev := 1
lambda := 0.3
rho_sp := 2
rho_tm := 2

min_width := [9 9 9]
min_mg_cwidth := [5 5 5]
gdm_no_overlap := 1
ghost_width := [4 4 4]
TRE_max := 1.0e-5
num_TRE_vars := 1
TRE_vars := [ "phi1" ]
TRE_buffer := 8
TRE_ibc_buffer := 16
TRE_exc_buffer := 2
TRE_exc_buffer_lmin := 6
TRE_ibcp_buffer := 0
TRE_sgpbh := 1
regrid_interval := 32
regrid_min_lev := 2
TRE_norm := 0
regrid_script := 0
regrid_script_name = "AdS4D.rgs"

cls_merge_dist := 8
cls_method := 0
cls_align_mode := 1

#------ constraint damping -------------------------------------------------
          
kappa_cd := -10.0
rho_cd := -1.0
kappa_cd_cosn := 0

#------ gauge --------------------------------------------------------------
gauge_t := 3
gauge_i := 3
rho1_t := 0.0
rho2_t := 0.95
rho3_t := 0.05
rho4_t := 0.95
xi1_t := 0.1
xi2_t := 0.0025
cbulk_t := 0.0
c1_t := 20.0
c2_t := 0.5
c3_t := 1.0
rho1_i := 0.0
rho2_i := 0.95
rho3_i := 0.05
rho4_i := 0.95
xi1_i := 0.1
xi2_i := 0.0025
cbulk_i := 0.0
c1_i := 20.0
c2_i := 0.5
c3_i := 1.0

rhoa := 0.5
rhob := 0.9

#------ dissipation --------------------------------------------------------

# (turned off dissipation for now, to make np1,n,nm1 diagnostics cleaner)
# (automatic KO diss applied to nm1 just before app_evolve hook fnct called)
# (dissipation really alters ind. res.)
tn_eps_diss := 0.35
tnp1_eps_diss := 0.0
diss_bdy := 1
repop_diss_bdy := 1
diss_all_past := 1

diss_kmax := 0
diss_eps_k_cutoff_n := 0
diss_eps_k := 0.35
diss_bdy_k := 1
diss_all_past_k := 0
diss_eps_y_cutoff := 1
diss_all := 1

#------- check-pointing (off) ---------------------------------------------

cp_restart := 0
cp_delta_t_hrs := 0.0
cp_save_fname := "cp_L3p5"
cp_restore_fname := "cp_L3p5_A"

#------- solution related -------------------------------------------------

steps := 3
evo_max_iter := 25
evo_min_iter := 1
evo_tol := 1.0e-10

MG_max_iter := 25
MG_min_iter := 1
MG_max_citer := 1000
MG_pre_swp := 3
MG_pst_swp := 3
MG_w0 := 1.0
MG_tol := 1.0e-8
MG_crtol := 1.0e-2
MG_extrap_method := 0
MG_eps_c := 1.0

skip_frg := 1
evo_ssc := 0

id_method := 0
id_pl_method := 3

np1_initial_guess := 1
io_node := 0

max_t_interp_order := 3

#------- IO ---------------------------------------------------------------

num_save_1_vars := 5
save_1_vars := [ "iresall" "gb_res" "gb_xx" "kg_ires" "quasiset_tracell" ]

num_save_2_vars := 7
save_2_vars := [ "gb_xx" "psi" "Hb_x" "phi1" "kretsch" "gb_tt" "riemanncube" ]

num_save_3_vars := 2
save_3_vars := [ "gb_xx" "Hb_x" ]

calc_global_var_norms := 1
global_var_norm_floor := 1

save_tag := "AdS4D_3p1_gauge3_L3p5_"

save_ivec := 1-*/81

#-----------------------------------------------------
